package  {	import flash.display.*;	import flash.events.*;	import flash.external.ExternalInterface;	import gs.TweenLite;	import flash.net.*;		/**	 * dimensions: 600 x 600	 * Help ExternalInterface	 * 	 * Calls	 * CloseHelp()	 */	public class Help extends Sprite	{			private var _pages:Array;		private var _page:MovieClip;		private var _pageNext:SimpleButton;		private var _pagePrev:SimpleButton;		private var _close:SimpleButton;		private var _curIndex:int = 0;				public function Help() 		{			init();		}				private function init()		{				trace("loading Help.xml");			var loader:URLLoader = new URLLoader();			var request:URLRequest = new URLRequest("Help.xml");			loader.addEventListener(Event.COMPLETE, xmlLoaded);			loader.load(request);						_page = page;			_pageNext = pageNext;			_pagePrev = pagePrev;			_close = close;						ExternalInterface.addCallback('gc', gc);		}				private function xmlLoaded(e:Event)		{			var configXml:XML = new XML(URLLoader(e.target).data);			//trace(configXml);			_pages = new Array();						var pages:XMLList = configXml.descendants();			trace("pages found:" + pages.length());			for (var i:int = 0; i < pages.length(); i++)			{				var p:XML = pages[i];				trace("Help.xmlLoaded: adding page...");				_pages.push(p.attribute("url"));			}						_pagePrev.visible = false;			_curIndex = 0;			loadPage(_curIndex);						_pageNext.addEventListener(MouseEvent.CLICK, pageNextClick, false, 0, true);			_pagePrev.addEventListener(MouseEvent.CLICK, pagePrevClick, false, 0, true);			_close.addEventListener(MouseEvent.CLICK, closeClick, false, 0, true);					}				private function loadPage(pageNumber:int)		{			var p:Loader = new Loader();			p.contentLoaderInfo.addEventListener(Event.COMPLETE, pageLoaded, false, 0, true);			p.load(new URLRequest(_pages[pageNumber]));		}				private function pageNextClick(e:Event)		{			_curIndex++;			_pageNext.visible = _curIndex < _pages.length - 1;			_pagePrev.visible = _curIndex > 0;			loadPage(_curIndex);		}				private function pagePrevClick(e:Event)		{			_curIndex--;			_pageNext.visible = _curIndex < _pages.length - 1;			_pagePrev.visible = _curIndex > 0;			loadPage(_curIndex);		}				private function closeClick(e:Event)		{			trace("close clicked");			ExternalInterface.call("CloseHelp");		}				private function pageLoaded(e:Event)		{			trace("page loaded");			var d:DisplayObject = LoaderInfo(e.target).content;			d.width = _page.width;			d.height = _page.height;			if (_page.numChildren > 0)				_page.removeChildAt(0);			_page.addChild(d);		}				private function gc():void		{			   // unsupported hack that seems to force a full GC			   try			   {					  var lc1:LocalConnection = new LocalConnection();					  var lc2:LocalConnection = new LocalConnection();					  lc1.connect('name');					  lc2.connect('name');			   }			   catch (e:Error)			   {			   }		}	}	}