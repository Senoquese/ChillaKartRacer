package  {	import flash.display.*;	import flash.events.*;	import flash.external.ExternalInterface;	import flash.media.Sound;	import flash.system.Security;	import gs.TweenLite;	import flash.net.*;	import flash.media.Sound;		/**	 * dimensions: 255 x 296	 * MainMenu ExternalInterface	 * 	 * ---- Expected C++ Functions ----	 * ButtonClick(id:String):void	 * - id:	Unique identifier for the clicked button.	 * 	 * PlaySoundFromPath	*/	public class MainMenu extends Sprite	{			private var _buttonProps:Object;		private var _testSound:Sound;				public function MainMenu() 		{			init();		}				private function init()		{			Security.allowDomain('*');						dotOn.alpha = 0;			dotOn.x = joinButton.x;						var loader:URLLoader = new URLLoader();			var request:URLRequest = new URLRequest("MainMenu.xml");			loader.addEventListener(Event.COMPLETE, xmlLoaded);			loader.load(request);						//addEventListener(Event.ENTER_FRAME, test);						ExternalInterface.addCallback('gc', gc);		}				private function test(e:Event = null):void		{			var arr:Array = new Array();			for (var i = 0; i < 1; i++)			{				arr.push(new Bitmap(new BitmapData(256, 256)));			}			dotOn.alpha = 1;			dotOn.y = Math.random() * 200;		}				private function buttonClicked(e:Event)		{				if (!_buttonProps)				return;			trace("clicked:" + e.target.name);			var obj:Object = _buttonProps[e.target.name];			var id:String = obj.id;			var sound:String = obj.sound;			//sound.play();			trace(e.target.name+":, "+id);						// animate			dotOn.alpha = 0;			dotOn.y = e.target.y;			TweenLite.to(dotOn, 0.5, { alpha:1 } );						trace("Playing sound:" + sound);			ExternalInterface.call("PlaySoundFromPath", sound);			ExternalInterface.call("ButtonClick", id);		}				private function buttonOver(e:Event)		{			// animate			//dotOn.alpha = 0;			//dotOn.y = e.target.y;			//TweenLite.to(dotOn, 0.5, { alpha:1 } );						var sound:String = "GUI\\flash\\garage\\sounds\\Item_Rollovers.wav"			//Trace("Playing sound:" + sound);			ExternalInterface.call("PlaySoundFromPath", sound);						//gcHack();		}				private function xmlLoaded(e:Event)		{			var configXml:XML = new XML(URLLoader(e.target).data);						_buttonProps = new Object();						var buttons:XMLList = configXml.descendants('button');			for (var i:int = 0; i < buttons.length(); i++)			{				var b:XML = buttons[i];				var name:String = b.attribute('name');				trace("loading button:" + name);				var obj:Object = new Object();				obj.id = b.attribute('id');				var sound:String = b.attribute('sound');				//sound.load(new URLRequest(b.attribute('sound')));				obj.sound = sound;				_buttonProps[name] = obj;				this[name].addEventListener(MouseEvent.CLICK, buttonClicked);				this[name].addEventListener(MouseEvent.ROLL_OVER, buttonOver);			}		}				private function gc():void		{			   // unsupported hack that seems to force a full GC			   try			   {					  var lc1:LocalConnection = new LocalConnection();					  var lc2:LocalConnection = new LocalConnection();					  lc1.connect('name');					  lc2.connect('name');			   }			   catch (e:Error)			   {			   }		}	}	}