
vertex_program HardwareSkinningTwoWeightsShadowCasterCg cg
{
	source HardwareSkinning.cg
	entry_point hardwareSkinningTwoWeightsCaster_vp
	profiles vs_1_1 arbvp1
	includes_skeletal_animation true
}

vertex_program HardwareSkinningTwoWeightsShadowCasterGLSL glsl
{
	source HardwareSkinningCasterVp.glsl
	includes_skeletal_animation true
}

vertex_program HardwareSkinningTwoWeightsShadowCaster unified
{
	delegate HardwareSkinningTwoWeightsShadowCasterGLSL
	delegate HardwareSkinningTwoWeightsShadowCasterCg
}

// Basic hardware skinning using two indexed weights per vertex
vertex_program HardwareSkinningTwoWeightsCg cg
{
   source HardwareSkinning.cg
   entry_point hardwareSkinningTwoWeights_vp
   profiles vs_1_1 arbvp1
   includes_skeletal_animation true
}

vertex_program HardwareSkinningTwoWeightsGLSL glsl
{
   source HardwareSkinningVp.glsl
   includes_skeletal_animation true
}

vertex_program HardwareSkinningTwoWeights unified
{
	delegate HardwareSkinningTwoWeightsGLSL
	delegate HardwareSkinningTwoWeightsCg
	
   default_params
   {
   		param_named_auto worldMatrix3x4Array world_matrix_array_3x4
		param_named_auto viewProjectionMatrix viewproj_matrix
		param_named_auto lightPos[0] light_position 0
		param_named_auto lightPos[1] light_position 1
		param_named_auto lightDiffuseColour[0] light_diffuse_colour 0
		param_named_auto lightDiffuseColour[1] light_diffuse_colour 1
   }
}